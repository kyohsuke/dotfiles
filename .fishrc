# vim: expandtab softtabstop=2 shiftwidth=2
# vim: foldmethod=marker
# vim: filetype=fish

# {{{ rustup
test -d "$HOME/.cargo/bin"
and set -l ind (contains -i -- "$HOME/.cargo/bin" $PATH)
and set -e PATH[$ind]
set -gx PATH "$HOME/.cargo/bin" $PATH
# }}}
# {{{ docker-machine
command -v docker-machine > /dev/null
and _evalcache docker-machine env default
# }}}
# {{{ google cloud SDK
test -f "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.fish.inc"
and source "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.fish.inc"
# }}}
# {{{ anyenv
if test -x "$HOME/.anyenv/bin/anyenv"
  set -l ind (contains -i -- "$HOME/.anyenv/bin" $PATH)
  and set -e PATH[$ind]
  set -gx PATH "$HOME/.anyenv/bin" $PATH

  _evalcache anyenv init - fish
  set -f envPath "$HOME/.anyenv/envs"

  # goenv
  if test -x "$envPath/goenv/bin/goenv"
    set -gx GOENV_DISABLE_GOPATH 1
    set -gx GOPATH "$HOME"
    set -gx GOBIN "$HOME/bin"
    set -gx GOCACHE "$HOME/.cache/go-build"
    set -gx GOMODCACHE "$HOME/.cache/pkg/mod"
  end

  # pyenv
  if test -x "$envPath/pyenv/bin/pyenv"
    set -gx PYTHONDONTWRITEBYTECODE 1
    set -gx PYENV_VIRTUALENV_DISABLE_PROMPT 1
    set -gx PYTHON_CONFIGURE_OPTS "--enable-framework --enable-optimizations --with-lto"
  end

  # rbenv
  if test -x "$envPath/rbenv/bin/rbenv"
    set -gx GEM_EDITOR "mvim"
    set -gx RUBY_YJIT_ENABLE 1
    set -gx UNBUNDLED_COMMANDS rake cap irb
    set -gx RUBY_CONFIGURE_OPTS "--disable-install-doc --disable-install-rdoc"
  end
end
# }}}
# {{{ Homebrew
if command -v brew > /dev/null
  set -gx HOMEBREW_PREFIX "/usr/local"
  set -gx HOMEBREW_CELLAR "/usr/local/Cellar"
  set -gx HOMEBREW_REPOSITORY "/usr/local/Homebrew"

  set -l ind (contains -i -- /usr/local/sbin $PATH)
  and set -e PATH[$ind]
  set -gx PATH "/usr/local/sbin" $PATH

  set -l ind (contains -i -- /usr/local/bin $PATH)
  and set -e PATH[$ind]
  set -gx PATH "/usr/local/bin" $PATH

  not contains "/usr/local/share/man" $MANPATH
  and set -gx MANPATH "/usr/local/share/man" $MANPATH

  not contains "/usr/local/share/info" $INFOPATH
  and set -gx INFOPATH "/usr/local/share/info" $INFOPATH
end
# }}}

test -f "$HOME/.fishrc.local"
and source "$HOME/.fishrc.local"
