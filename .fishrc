# vim: filetype=fish foldmethod=marker

# {{{ rustup
test -d "$HOME/.cargo/bin"
and set -l ind (contains -i -- "$HOME/.cargo/bin" $PATH)
and set -e PATH[$ind]
set -gx PATH "$HOME/.cargo/bin" $PATH
# }}}
# {{{ docker-machine
command -v docker-machine >/dev/null
and _evalcache docker-machine env default
# }}}
# {{{ google cloud SDK
test -f "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.fish.inc"
and source "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.fish.inc"
# }}}
# {{{ anyenv
if test -x "$HOME/.anyenv/bin/anyenv"
    set -l ind (contains -i -- "$HOME/.anyenv/bin" $PATH)
    and set -e PATH[$ind]
    set -gx PATH "$HOME/.anyenv/bin" $PATH

    _evalcache anyenv init - fish
    set -f envPath "$HOME/.anyenv/envs"

    # goenv
    if test -x "$envPath/goenv/bin/goenv"
        set -gx GOENV_DISABLE_GOPATH 1
        set -gx GOPATH "$HOME"
        set -gx GOBIN "$HOME/bin"
        set -gx GOCACHE "$HOME/.cache/go-build"
        set -gx GOMODCACHE "$HOME/.cache/pkg/mod"
    end

    # pyenv
    if test -x "$envPath/pyenv/bin/pyenv"
        set -gx PYTHONDONTWRITEBYTECODE 1
        set -gx PYENV_VIRTUALENV_DISABLE_PROMPT 1
        set -gx PYTHON_CONFIGURE_OPTS "--enable-framework --enable-optimizations --with-lto"
    end

    # rbenv
    if test -x "$envPath/rbenv/bin/rbenv"
        set -gx GEM_EDITOR mvim
        set -gx RUBY_YJIT_ENABLE 1
        set -gx UNBUNDLED_COMMANDS rake cap irb
        set -gx RUBY_CONFIGURE_OPTS "--disable-install-doc --disable-install-rdoc"
    end
end
# }}}
# {{{ Homebrew
if test -x "/usr/local/bin/brew"
    _evalcache /usr/local/bin/brew shellenv
else if test -x "/opt/homebrew/bin/brew"
    _evalcache /opt/homebrew/bin/brew shellenv
end
# }}}

set -l upath
for npath in $PATH
    not contains -- $npath $upath
    and set upath $upath $npath
end
set -gx PATH $upath

test -f "$HOME/.fishrc.local"
and source "$HOME/.fishrc.local"
