---
- name: fish | Determine shell executable location
  command: type -p fish
  register: fish
  check_mode: no

- name: fish | Change default shell
  become: yes
  become_user: root
  user: name="{{ lookup('env', 'USER') }}" shell="{{ fish.stdout }}"
  when: (lookup('env', 'SHELL') != fish.stdout)

- name: fish | Determine fisher executable location
  stat:
    path: "{{ lookup('env', 'HOMEBREW_PREFIX') }}/share/fish/vendor_functions.d/fisher.fish"
  register: fisher_path

- name: fish | Initialize fisher
  when: (fisher_path.stat.exists)
  shell: "{{ fish.stdout }} -c \"source {{ lookup('env', 'HOMEBREW_PREFIX') }}/share/fish/vendor_functions.d/fisher.fish && fisher update\""

- name: fish | Determine oh-my-fish XDG_DATA_HOME
  stat:
    path: "{{ lookup('env', 'XDG_DATA_HOME') }}/omf"
  register: omf_dir_xdg

- name: fish | Determine oh-my-fish HOME
  stat:
    path: "{{ lookup('env', 'HOME') }}/.local/share/omf"
  register: omf_dir_home

- name: fish | Install oh-my-fish
  shell: "curl https://raw.githubusercontent.com/oh-my-fish/oh-my-fish/master/bin/install | {{ fish.stdout }}"
  when: ((not omf_dir_xdg.stat.exists) and (not omf_dir_home.stat.exists))

- name: fish | Install theme"
  shell: "{{ fish.stdout }} -c \"omf update && omf install coffeeandcode && omf theme coffeeandcode\""

- name: fish | Checking .fishenv.local exists
  stat:
    path: "{{ lookup('env', 'HOME') }}/.local/share/fish/env"
  register: env_local

- name: fish | Detect Machine processors
  when: not env_local.stat.exists
  command: ruby -retc -e 'puts Etc.nprocessors'
  register: processors

- name: fish | Detect Machine Arch
  when: not env_local.stat.exists
  command: uname -m
  register: arch

- name: fish | Checking .fishenv.local exists
  when: not env_local.stat.exists
  shell: "mkdir -p {{ lookup('env', 'HOME') }}/.local/share/fish"

- name: fish | Generate {{ env_local.path }}
  when: not env_local.stat.exists
  command: |
    echo "" > {{ env_local.path }}
    echo "set -gx MACHINE_PROCESSORS {{ processors.stdout }}" >> {{ env_local.path }}
    echo "set -gx HOMEBREW_MAKE_JOBS $MACHINE_PROCESSORS" >> {{ env_local.path }}
    echo "set -gx BUNDLE_JOBS $MACHINE_PROCESSORS" >> {{ env_local.path }}
    echo "set -gx MAKE_OPTS \"-j $MACHINE_PROCESSORS\"" >> {{ env_local.path }}
    echo "set -gx ARCHFLAGS \"-arch {{ arch.stdout }}\"" >> {{ env_local.path }}
